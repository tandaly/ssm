<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tandaly.system.admin.dao.UserDao">

	<!-- <cache />  -->
	
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 -->  
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>  
    <!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<!--登录查询-->
	<select id="logins" parameterType="string" resultType="User">
	    SELECT
	    	t.*
	    FROM 
	    	t_sys_user t
	    WHERE
	    	t.userName=#{userName}
	    AND 
	    	t.status = '启用'
	</select>
	
	<!--新增用户-->
	<insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_sys_user
		<trim prefix="(" suffixOverrides="," suffix=")">
			id,
			<if test="userName != null and userName != ''">userName,</if>
			<if test="password != null and password != ''">password,</if>
			<if test="status != null and status != ''">status,</if>
			<if test="registerDate != null">registerDate,</if>
			<if test="remark != null">remark,</if>
		</trim>
		VALUES
		<trim prefix="(" suffixOverrides="," suffix=")">
			#{id},
			<if test="userName != null and userName != ''">#{userName},</if>
			<if test="password != null and password != ''">#{password},</if>
			<if test="status != null and status != ''">#{status},</if>
			<if test="registerDate != null">#{registerDate},</if>
			<if test="remark != null">#{remark},</if>
		</trim>
		
	</insert>
	
	<!-- 删除用户 -->
	<delete id="delete" parameterType="string">
		DELETE FROM t_sys_user
		WHERE id IN (
		<trim suffixOverrides=",">
			${_parameter}
		</trim>
		)
	</delete>
	
	<!-- 修改用户 -->
	<update id="update" parameterType="User">
		UPDATE t_sys_user
		<set>
			<if test="userName != null and userName != ''">userName = #{userName},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="remark != null">remark = #{remark},</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<!--根据id查询用户-->
	<select id="queryEntityById" parameterType="integer" resultType="User">
		SELECT
			t.*
		FROM
			t_sys_user t
		WHERE
			t.id = #{_parameter}
	</select>
	
	<!--检查修改用户有效性-->
	<select id="checkUpdateUser" parameterType="User" resultType="integer">
		SELECT
			COUNT(1)
		FROM
			t_sys_user t
		WHERE
			t.id != #{id}
			<if test="userName != null and userName != ''">
				AND t.userName = #{userName}
			</if>
	</select>
	
	<!--根据条件查询用户列表-->
	<select id="queryEntitys" parameterType="User" resultType="User">
		SELECT 
			t.*
		FROM
			t_sys_user t
		<where>
			<trim prefixOverrides="AND ">
				<if test="userName != null and userName != ''">
					AND t.userName = #{userName}
				</if>
			</trim>
		</where>
	</select>

	<!--分页查询用户总数-->
	<select id="pageQueryEntityCount" parameterType="hashmap" resultType="integer">
	  	SELECT
	  		COUNT(1)
	  	FROM
	  		t_sys_user t
		<where>
			<trim prefixOverrides="AND ">
				<if test="user.userName != null and user.userName != ''">
	  				AND t.userName LIKE CONCAT('%', #{user.userName}, '%')
				</if>
				<if test="user.status != null and user.status != ''">
	  				AND t.status = #{user.status}
				</if>
			</trim>
		</where>
	</select>
	
	<!--分页查询用户列表-->
	<select id="pageQueryEntityList" parameterType="hashmap" resultType="User">
	  	SELECT
	  		t.*
	  	FROM
	  		t_sys_user t
		<where>
			<trim prefixOverrides="AND ">
				<if test="user.userName != null and user.userName != ''">
	  				AND t.userName LIKE CONCAT('%', #{user.userName}, '%')
				</if>
				<if test="user.status != null and user.status != ''">
	  				AND t.status = #{user.status}
				</if>
			</trim>
		</where>
		ORDER BY t.id DESC
		LIMIT #{startRow}, #{pageSize};
	</select>
	
	<!--根据用户id分页查询角色总数-->
	<select id="pageQueryUserRoleCount" parameterType="hashmap" resultType="integer">
	  	SELECT
	  		COUNT(1)
	  	FROM
	  		t_sys_role r,
	  		t_sys_user_role ur
		<where>
			r.id = ur.roleId
			AND ur.userId = #{userId}
			<if test="role.roleName != null and role.roleName != ''">
  				AND r.roleName LIKE '%${role.roleName}%'
			</if>
		</where>
	</select>
	
	<!--根据用户id分页查询角色列表-->
	<select id="pageQueryUserRoleList" parameterType="hashmap" resultType="Role">
	  	SELECT
	  		r.*
	  	FROM
	  		t_sys_role r,
	  		t_sys_user_role ur
		<where>
			r.id = ur.roleId
			AND ur.userId = #{userId}
			<if test="role.roleName != null and role.roleName != ''">
  				AND r.roleName LIKE '%${role.roleName}%'
			</if>
		</where>
		ORDER BY r.id DESC
		LIMIT #{startRow}, #{pageSize}
	</select>
	
	
	<!--分页查询选择角色总数-->
	<select id="pageQuerySelectRoleCount" parameterType="hashmap" resultType="integer">
	  	SELECT 
			COUNT(1)
		FROM 
			t_sys_role t
		WHERE NOT EXISTS(
			SELECT 
				t.id
			FROM 
				t_sys_role r 
			LEFT OUTER JOIN 
				t_sys_user_role ur 
				ON r.id = ur.roleId
			WHERE
			 ur.userId = #{userId}
			AND t.id = r.id
		)
		<if test="role.roleName != null and role.roleName != ''">
			AND t.roleName LIKE '%${role.roleName}%'
		</if>
	</select>
	
	<!--分页查询选择角色列表-->
	<select id="pageQuerySelectRoleList" parameterType="hashmap" resultType="Role">
	  	SELECT 
			t.*
		FROM 
			t_sys_role t
		WHERE NOT EXISTS(
			SELECT 
				t.id
			FROM 
				t_sys_role r 
			LEFT OUTER JOIN 
				t_sys_user_role ur 
				ON r.id = ur.roleId
			WHERE
			 ur.userId = #{userId}
			AND t.id = r.id
		)
		<if test="role.roleName != null and role.roleName != ''">
			AND t.roleName LIKE '%${role.roleName}%'
		</if>
		ORDER BY t.id DESC
		LIMIT #{startRow}, #{pageSize}
	</select>
	
	<!--分配角色给用户-->
	<insert id="allotUserRole" parameterType="hashMap">
		INSERT INTO t_sys_user_role
		(userId, roleId)
		VALUES
		(#{userId}, #{roleId})
	</insert>
	
	
	<!--根据角色id和用户id删除关联-->
	<delete id="deleteUserRole" parameterType="hashMap">
		DELETE FROM 
			t_sys_user_role
		WHERE
			roleId IN
			(
			<trim suffixOverrides=",">
				${roleIds}
			</trim>
			)
		AND userId = #{userId}
	</delete>
	
	<!--删除用户和角色的关联关系-->
	<delete id="deleteUserRoleByUserIds" parameterType="string">
		DELETE FROM
			t_sys_user_role
		WHERE
			userId IN
			(
			<trim suffixOverrides=",">
				${_parameter}
			</trim>
			)
	</delete>
	
	<!--启用或禁用帐号-->
	<update id="updateUserStatus" parameterType="hashMap">
		UPDATE 
			t_sys_user t
		<set>
			<if test="status == '启用' or status == '禁用'">
				t.status = #{status}
			</if>
		</set>
		WHERE
			t.id IN( 
			<trim suffixOverrides=",">
				${userIds}
			</trim>
			)
	</update>
	
</mapper>