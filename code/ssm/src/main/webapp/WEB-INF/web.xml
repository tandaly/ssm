<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
 <display-name>sys</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
	<!-- 设置log4j存放Log文件位置（通过spring统一进行管理） -->
	<context-param>
		<param-name>webAppRootKey</param-name>
	  	<param-value>log.root</param-value>
	</context-param>
	
	<!-- 加载log4j的配置文件 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
	  	<param-value>classpath:/log4j.properties</param-value>
	</context-param>
	
	<!--Spring默认刷新Log4j配置文件的间隔,单位为millisecond-->
	<context-param>
	  	<param-name>log4jRefreshInterval</param-name>
	  	<param-value>60000</param-value>
	</context-param>
	
	<!--Spring用于log4j初始化的监听器-->
	<listener>
	  	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
  		<param-value>
			/WEB-INF/classes/applicationContext*.xml,
			/WEB-INF/springMVC-servlet.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
  <!-- ***************springMVC配置 start******************** -->
  	<!--入口控制器-->
  	<servlet>
    	<servlet-name>springMVC</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	<!--
    	<init-param>
      		<param-name>contextConfigLocation</param-name>
      		<param-value>
				/WEB-INF/classes/applicationContext*.xml
				/WEB-INF/springMVC-servlet.xml
			</param-value>
    	</init-param>
    	-->
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
    	<servlet-name>springMVC</servlet-name>
    	<url-pattern>*.do</url-pattern>
  	</servlet-mapping>
  <!-- ***************springMVC配置 end******************** -->
  
  
  	<!-- Spring Secutiry3.0.2的过滤器链配置  -->
 	<filter>
  		<filter-name>springSecurityFilterChain</filter-name>
  		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
 	</filter>

 	<filter-mapping>
  		<filter-name>springSecurityFilterChain</filter-name>
  		<url-pattern>/*</url-pattern>
 	</filter-mapping>
  
  <!--服务器启动时初始化操作 -->
	<servlet>
	    <servlet-name>SystemServlet</servlet-name>
	    <servlet-class>com.tandaly.core.web.servlet.SystemServlet</servlet-class>
	    <init-param>
	      <param-name>encoding</param-name>
	      <param-value>UTF-8</param-value>
	    </init-param>
	    <load-on-startup>2</load-on-startup>
	</servlet>
  
  <!-- 统一字符编码为UTF-8 使用Spring中的过滤器解决在请求和应答中的中文乱码问题 -->
  	<filter>
    	<filter-name>setCharacter</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    	<init-param>
      		<param-name>encoding</param-name>
      		<param-value>utf-8</param-value>
    	</init-param>
    	<init-param>
   			<!--强制转换编码(request和response均适用) -->
   			<param-name>ForceEncoding</param-name>
   			<param-value>true</param-value>
  		</init-param>
  	</filter>
  	<filter-mapping>
    	<filter-name>setCharacter</filter-name>
   		<url-pattern>/*</url-pattern>
  	</filter-mapping>
  
  	<!-- Spring刷新Interceptor防止内存泄漏  -->
	<listener>
 		<listener-class>
 			org.springframework.web.util.IntrospectorCleanupListener
 		</listener-class>
	</listener>
  
  <!-- 请求拦截过滤器 
	<filter>
		<filter-name>requestFilter</filter-name>
		<filter-class>com.tandaly.core.web.filter.RequestFilter</filter-class>
		<init-param>
			<param-name>enabled</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>requestFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	-->
	
	<!--系统session监听-->
	<listener>
		<listener-class>com.tandaly.core.web.listener.SystemSessionListener</listener-class>
	</listener>
	
	<!-- 设置session失效，单位分 -->
	<session-config>
	  <session-timeout>30</session-timeout>
	</session-config>
	
	<!-- druid监控配置 start -->
	<servlet>
      <servlet-name>DruidStatView</servlet-name>
      <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
      <init-param>
        <param-name>resetEnable</param-name>
        <param-value>false</param-value>
    	</init-param>
	</servlet>
	<servlet-mapping>
	    <servlet-name>DruidStatView</servlet-name>
	    <url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
    <!-- druid监控配置 end -->
    
</web-app>